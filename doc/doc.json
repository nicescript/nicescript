{"types":{"Anything":{"name":"Anything","properties":[],"description":"Parent type for all types."},"Nothing":{"name":"Nothing","properties":[],"description":"Parent type for all falsy values.","extends":"Anything"},"Undefined":{"name":"Undefined","properties":[],"description":"Wrapper for JS undefined.","extends":"Nothing"},"Null":{"name":"Null","properties":[],"description":"Wrapper for JS null.","extends":"Nothing"},"Fail":{"name":"Fail","properties":[],"description":"Empty negative signal.","extends":"Nothing"},"NeedComputing":{"name":"NeedComputing","properties":[],"description":"State of the Box in case it need some computing.","extends":"Nothing"},"Pending":{"name":"Pending","properties":[],"description":"State of the Box when it awaits input.","extends":"Nothing"},"Stop":{"name":"Stop","properties":[],"description":"Value used to stop iterationin .each() and similar functions.","extends":"Nothing"},"NumberError":{"name":"NumberError","properties":[],"description":"Wrapper for JS NaN.","extends":"Nothing"},"Something":{"name":"Something","properties":[],"description":"Parent type for all non falsy values.","extends":"Anything"},"Ok":{"name":"Ok","properties":[],"description":"Empty positive signal.","extends":"Something"},"Value":{"name":"Value","properties":[],"description":"Parent type for all values.","extends":"Something"},"Obj":{"name":"Obj","properties":[],"description":"Parent type for all composite types.","extends":"Value"},"Box":{"name":"Box","properties":[],"description":"Observable component for declarative style programming.","extends":"Something"},"Err":{"name":"Err","properties":[],"description":"Represents error.","extends":"Nothing"},"Single":{"name":"Single","properties":[],"description":"Parent type for all non composite types.","extends":"Value"},"Arr":{"name":"Arr","properties":[],"description":"Ordered list of elements.","extends":"Obj"},"Num":{"name":"Num","properties":[],"description":"Wrapper for JS number.","extends":"Single"},"Str":{"name":"Str","properties":[],"description":"Wrapper for JS string.","extends":"Single"},"Pointer":{"name":"Pointer","properties":[],"description":"Holds key of an object or array.","extends":"Single"},"Bool":{"name":"Bool","properties":[],"description":"Wrapper for JS boolean.","extends":"Single"},"Range":{"name":"Range","properties":[{"name":"start","type":"Num"},{"name":"end","type":"Num"}],"description":"Represent range of numbers.","extends":"Obj"},"Html":{"name":"Html","properties":[{"name":"tag","type":"Str"},{"name":"eventHandlers","type":"Obj"},{"name":"cssSelectors","type":"Obj"},{"name":"style","type":"Obj"},{"name":"attributes","type":"Obj"},{"name":"children","type":"Arr"}],"description":"Represents HTML element.","extends":"Obj"},"Style":{"name":"Style","properties":[],"description":"Represents CSS style.","extends":"Obj"},"Div":{"name":"Div","properties":[],"description":"Represents HTML <div> element.","extends":"Html"},"I":{"name":"I","properties":[],"description":"Represents HTML <i> element.","extends":"Html"},"B":{"name":"B","properties":[],"description":"Represents HTML <b> element.","extends":"Html"},"Span":{"name":"Span","properties":[],"description":"Represents HTML <span> element.","extends":"Html"},"H1":{"name":"H1","properties":[],"description":"Represents HTML <h1> element.","extends":"Html"},"H2":{"name":"H2","properties":[],"description":"Represents HTML <h2> element.","extends":"Html"},"H3":{"name":"H3","properties":[],"description":"Represents HTML <h3> element.","extends":"Html"},"H4":{"name":"H4","properties":[],"description":"Represents HTML <h4> element.","extends":"Html"},"H5":{"name":"H5","properties":[],"description":"Represents HTML <h5> element.","extends":"Html"},"H6":{"name":"H6","properties":[],"description":"Represents HTML <h6> element.","extends":"Html"},"P":{"name":"P","properties":[],"description":"Represents HTML <p> element.","extends":"Html"},"Li":{"name":"Li","properties":[],"description":"Represents HTML <li> element.","extends":"Html"},"Ul":{"name":"Ul","properties":[],"description":"Represents HTML <ul> element.","extends":"Html"},"Ol":{"name":"Ol","properties":[],"description":"Represents HTML <ol> element.","extends":"Html"},"Pre":{"name":"Pre","properties":[],"description":"Represents HTML <pre> element.","extends":"Html"},"A":{"name":"A","properties":[],"description":"Represents HTML <a> element.","extends":"Html"},"Img":{"name":"Img","properties":[],"description":"Represents HTML <img> element.","extends":"Html"},"Input":{"name":"Input","properties":[],"description":"Represents HTML <input> element.","extends":"Html"},"Button":{"name":"Button","properties":[],"description":"Represents HTML <input type=\"button\"> element.","extends":"Input"},"Textarea":{"name":"Textarea","properties":[],"description":"Represents HTML <textarea> element.","extends":"Input"},"Submit":{"name":"Submit","properties":[],"description":"Represents HTML <input type=\"submit\"> element.","extends":"Input"},"Checkbox":{"name":"Checkbox","properties":[],"description":"Represents HTML <input type=\"checkbox\"> element.","extends":"Input"}},"functions":[{"source":"v => v.functionType === t","title":"Check isCheck ( v )","description":"Checks if value is function and it's type is Check.","type":"Check"},{"source":"v => v.functionType === t","title":"Check isAction ( v )","description":"Checks if value is function and it's type is Action.","type":"Check"},{"source":"v => v.functionType === t","title":"Check isMapping ( v )","description":"Checks if value is function and it's type is Mapping.","type":"Check"},{"source":"equal(a, b) {\n    if(a === b)\n      return true;\n    if(a && a._isAnything && '_value' in a)\n      a = a._value;\n    if(b && b._isAnything  && '_value' in b)\n      b = b._value;\n    return a === b;\n  }","title":"Check equal ( a, b )","type":"Check"},{"source":"v => v === true","title":"Check isTrue ( v )","type":"Check"},{"source":"v => v === false","title":"Check isFalse ( v )","type":"Check"},{"source":"(v, ...vs) => vs.includes(v)","title":"Check isAnyOf ( v, ...vs )","type":"Check"},{"source":"v => v\n    ? v._isAnything\n      ? v.isNothing() ? false : !!v()\n      : true\n    : false","title":"Check isTruly ( v )","type":"Check"},{"source":"v => !nice.isTruly(v)","title":"Check isFalsy ( v )","type":"Check"},{"source":"v => {\n    if(nice.isNothing(v) || v === null)\n      return true;\n    if(v === 0 || v === '' || v === false)\n      return false;\n    if(Array.isArray(v))\n      return !v.length;\n    if(typeof v === 'object')\n      return !Object.keys(v).length;\n    return !v;\n  }","title":"Check isEmpty ( v )","type":"Check"},{"source":"(a, b) => {\n    nice.isString(a) && (a = nice.Type(a));\n    nice.isString(b) && (b = nice.Type(b));\n    return a === b || b.isPrototypeOf(a);\n  }","title":"Check isSubType ( a, b )","type":"Check"},{"source":"() => typeof window !== 'undefined'","title":"Check isEnvBrowser (  )","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isjs ( v )","description":"Checks if value is js.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isprimitive ( v )","description":"Checks if value is primitive.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isObject ( v )","description":"Checks if value is Object.","type":"Check"},{"source":"v => typeof v === low","title":"Check isString ( v )","description":"Checks if value is String.","type":"Check"},{"source":"v => typeof v === low","title":"Check isBoolean ( v )","description":"Checks if value is Boolean.","type":"Check"},{"source":"v => typeof v === low","title":"Check isNumber ( v )","description":"Checks if value is Number.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isundefined ( v )","description":"Checks if value is undefined.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isnull ( v )","description":"Checks if value is null.","type":"Check"},{"source":"v => typeof v === low","title":"Check isSymbol ( v )","description":"Checks if value is Symbol.","type":"Check"},{"source":"v => typeof v === low","title":"Check isFunction ( v )","description":"Checks if value is Function.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isDate ( v )","description":"Checks if value is Date.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isRegExp ( v )","description":"Checks if value is RegExp.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isArray ( v )","description":"Checks if value is Array.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isError ( v )","description":"Checks if value is Error.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isArrayBuffer ( v )","description":"Checks if value is ArrayBuffer.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isDataView ( v )","description":"Checks if value is DataView.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isMap ( v )","description":"Checks if value is Map.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isWeakMap ( v )","description":"Checks if value is WeakMap.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isSet ( v )","description":"Checks if value is Set.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isWeakSet ( v )","description":"Checks if value is WeakSet.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isPromise ( v )","description":"Checks if value is Promise.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isEvalError ( v )","description":"Checks if value is EvalError.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isRangeError ( v )","description":"Checks if value is RangeError.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isReferenceError ( v )","description":"Checks if value is ReferenceError.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isSyntaxError ( v )","description":"Checks if value is SyntaxError.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isTSypeError ( v )","description":"Checks if value is TSypeError.","type":"Check"},{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isUriError ( v )","description":"Checks if value is UriError.","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isAnything ( v )","description":"Checks if value has type Anything","type":"Check"},{"source":"v => nice.Anything.isPrototypeOf(v)","title":"Check isType ( v )","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNothing ( v )","description":"Checks if value has type Nothing","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isUndefined ( v )","description":"Checks if value has type Undefined","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNull ( v )","description":"Checks if value has type Null","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isFail ( v )","description":"Checks if value has type Fail","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNeedComputing ( v )","description":"Checks if value has type NeedComputing","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isPending ( v )","description":"Checks if value has type Pending","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isStop ( v )","description":"Checks if value has type Stop","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNumberError ( v )","description":"Checks if value has type NumberError","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSomething ( v )","description":"Checks if value has type Something","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isOk ( v )","description":"Checks if value has type Ok","type":"Check"},{"source":"(...as) => {\n  let v;\n  for(let i in as){\n    v = nice(as[i]);\n    if(nice.isSomething(v) && v._value !== false)\n      return v;\n  }\n  return v || nice.Nothing();\n}","title":"Mapping or ( Anything ...as )","type":"Mapping"},{"source":"(...as) => {\n  let v;\n  for(let i in as){\n    v = nice(as[i]);\n    if(!nice.isSomething(v) || v._value === false)\n      return v;\n  }\n  return v;\n}","title":"Func and ( Anything ...as )"},{"source":"(...as) => {\n  let v;\n  for(let i in as){\n    v = nice(as[i]);\n    if(nice.isSomething(v) && v._value !== false)\n      return nice(false);\n  }\n  return nice(true);\n}","title":"Func nor ( Anything ...as )"},{"source":"(...as) => {\n  let count = 0;\n  for(let i in as){\n    const v = nice(as[i]);\n    if(nice.isSomething(v) && v._value !== false)\n      count++;\n  }\n  return nice(count && count < as.length ? true : false);\n}","title":"Func xor ( Anything ...as )"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isValue ( v )","description":"Checks if value has type Value","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isObj ( v )","description":"Checks if value has type Obj","type":"Check"},{"source":"function itemsType(z, t){\n    z._itemsType = t;\n  }","title":"Action itemsType ( Obj z, t )","type":"Action"},{"source":"() => 0","title":"Func each ( Nothing )"},{"source":"(o, k) => o._items.hasOwnProperty(k)","title":"Check has ( Obj o, k )","type":"Check"},{"source":"function each(o, f){\n  for(let k in o._items)\n    if(nice.isStop(f(o._items[k], k)))\n      break;\n  return o;\n}","title":"Func each ( Obj o, f )"},{"source":"(o, f) => {\n  Object.keys(o._items).reverse().forEach(k => f(o._items[k], k));\n}","title":"Func reverseEach ( Obj o, f )"},{"source":"(o, i) => o[''+i]","title":"Mapping get ( Object o, i )","type":"Mapping"},{"source":"(z, i) => {\n  if(i._isAnything === true)\n    i = i();\n  if(z._items.hasOwnProperty(i)){\n    return z._items[i];\n  }\n  const type = z._type.types[i];\n  return type\n    ? z._items[i] = type()\n    : undefined;\n}","title":"Mapping get ( Obj z, i )","type":"Mapping"},{"source":"(o, i, v) => o[''+i] = v","title":"Action set ( Object o, i, v )","type":"Action"},{"source":"(z, i, v, ...tale) => {\n  i = z.checkKey(i);\n  z.transactionStart();\n  let res;\n  if(!nice.equal(v, z._items[i])){\n    z._oldValue = z._oldValue || {};\n    z._oldValue[i] = z._items[i];\n  }\n  const type = z._itemsType || (z._type.types && z._type.types[i]);\n  if(type){\n    if(v && v._isAnything){\n      if(!v._type.isSubType(type))\n        throw `Expected item type is ${type.name} but ${v._type.name} is given.`;\n      res = v;\n    } else {\n      res = type(v, ...tale);\n    }\n  } else {\n    res = v;\n  }\n  z._items[i] = res;\n  z._newValue = z._newValue || {};\n  z._newValue[i] = res;\n  z.transactionEnd();\n  return z;\n}","title":"Action set ( Obj z, i, v, ...tale )","type":"Action"},{"source":"(z, o) => _each(o, (v, k) => z.set(k, v))","title":"Action assign ( Obj z, o )","type":"Action"},{"source":"(z, o) => {\n  \n  z._oldValue = z._items;\n  z._items = o._items;\n}","title":"Action replaceAll ( Obj z, o )","type":"Action"},{"source":"(z, i) => {\n  z._oldValue = z._oldValue || {};\n  z._oldValue[i] = z._items[i];\n  delete z._items[i];\n}","title":"Action remove ( Obj z, i )","type":"Action"},{"source":"z => {\n  z._oldValue = z._items;\n  z._type.onCreate(z);\n}","title":"Action removeAll ( Obj z )","type":"Action"},{"source":"function reduce(o, f, res){\n  for(let k in o._items)\n    res = f(res, o._items[k], k);\n  return res;\n}","title":"Mapping reduce ( Obj o, f, res )","type":"Mapping"},{"source":"function mapToArray(c, f){\n  return c.reduceTo.Array((a, v, k) => a.push(f(c.get(k), k)));\n}","title":"Mapping mapToArray ( Obj c, f )","type":"Mapping"},{"source":"() => nice.Nothing","title":"Mapping map ( Nothing )","type":"Mapping"},{"source":"function map(o, f){\n  const res = {};\n  for(let i in o)\n    res[i] = f(o[i], i);\n  return res;\n}","title":"Mapping map ( Object o, f )","type":"Mapping"},{"source":"function map(c, f){\n  const res = c._type();\n  for(let i in c())\n    res.set(i, f(c.get(i), i));\n  return res;\n}","title":"Mapping map ( Obj c, f )","type":"Mapping"},{"source":"function rMap(c, f){\n  const res = c._type();\n  c.listen({\n    onAdd: (v, k) => res.set(k, f(v, k)),\n    onRemove: (v, k) => res.remove(k)\n  });\n  return res;\n}","title":"Mapping rMap ( Obj c, f )","type":"Mapping"},{"source":"function filter(c, f){\n  return c._type().apply(z => c.each((v, k) => f(v,k) && z.set(k, v)));\n}","title":"Mapping filter ( Obj c, f )","type":"Mapping"},{"source":"function rFilter(c, f){\n  const res = c._type();\n  c.listen({\n    onAdd: (v, k) => f(v, k) && res.set(k, v),\n    onRemove: (v, k) => res.remove(k)\n  });\n  return res;\n}","title":"Mapping rFilter ( Obj c, f )","type":"Mapping"},{"source":"function sum(c, f){\n  return c.reduce((n, v) => n + (f ? f(v) : v), 0);\n}","title":"Mapping sum ( Obj c, f )","type":"Mapping"},{"source":"function some(c, f){\n  for(let i in c._items)\n    if(f(c._items[i], i))\n      return true;\n  return false;\n}","title":"Check some ( Obj c, Function f )","type":"Check"},{"source":"function every(c, f){\n  for(let i in c._items)\n    if(!f(c._items[i], i))\n      return false;\n  return true;\n}","title":"Check every ( Obj c, f )","type":"Check"},{"source":"function find(c, f){\n  for(let i in c._items)\n    if(f(c._items[i], i))\n      return c._items[i];\n}","title":"Mapping find ( Obj c, f )","type":"Mapping"},{"source":"function findKey(c, f){\n  nice.isFunction(f) || (f = nice.equal(f, nice));\n  for(let i in c._items)\n    if(f(c._items[i], i))\n      return i;\n}","title":"Mapping findKey ( Obj c, f )","type":"Mapping"},{"source":"function count(o, f) {\n  let n = 0;\n  o.each((v, k) => f(v, k) && n++);\n  return nice.Num(n);\n}","title":"Mapping count ( Obj o, Function f )","type":"Mapping"},{"source":"(o, t) => {\n  for(let i in o)\n    if(o[i] === t)\n      return true;\n  return false;\n}","title":"Check includes ( Obj o, t )","type":"Check"},{"source":"function getProperties(z){\n  const res = [];\n  for(let i in z) z[i]._isProperty && res.push(z[i]);\n  return res;\n}","title":"Mapping getProperties ( Obj z )","type":"Mapping"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isBox ( v )","description":"Checks if value has type Box","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isErr ( v )","description":"Checks if value has type Err","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSingle ( v )","description":"Checks if value has type Single","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isArr ( v )","description":"Checks if value has type Arr","type":"Check"},{"source":"function push(z, ...a) {\n    a.forEach(v => z.insertAt(z._items.length, v));\n  }","title":"Action push ( Arr z, ...a )","type":"Action"},{"source":"(a, f, res) => {\n  each(a, (v, k) => res = f(res, v, k));\n  return res;\n}","title":"Mapping reduce ( Arr a, Function f, res )","type":"Mapping"},{"source":"(a, f, res) => {\n  a.eachRight((v, k) => res = f(res, v, k));\n  return res;\n}","title":"Mapping reduceRight ( Arr a, Function f, res )","type":"Mapping"},{"source":"(a, ...bs) => a._items.concat(...bs)","title":"Mapping concat ( Arr a, Array ...bs )","type":"Mapping"},{"source":"(a, f) => a.reduce(f ? (sum, n) => sum + f(n) : (sum, n) => sum + n, 0)","title":"Mapping sum ( Arr a, f )","type":"Mapping"},{"source":"(z, ...a) => a.reverse().forEach(v => z.insertAt(0, v))","title":"Action unshift ( Arr z, ...a )","type":"Action"},{"source":"(z, ...a) => {\n  a.forEach(v => z.includes(v) || z.push(v));\n}","title":"Action add ( Arr z, ...a )","type":"Action"},{"source":"(a, v) => {\n  for(let i of a._items)\n    if(nice.equal(i, v))\n      return true;\n  return false;\n}","title":"Check includes ( Arr a, v )","type":"Check"},{"source":"(z, item) => {\n  const k = is.Value(item)\n    ? z.items.indexOf(item)\n    : z.findKey(v => item === v());\n  (k === -1 || k === undefined) || z.removeAt(k);\n}","title":"Action pull ( Arr z, item )","type":"Action"},{"source":"(z, i, v) => {\n  i = +i;\n  const old = z._items;\n  z._oldValue = z._oldValue || {};\n  z._newValue = z._newValue || {};\n  z._newValue[i] = v;\n  z._items = [];\n  _each(old, (_v, k) => {\n    +k === i && z._items.push(v);\n    z._items.push(_v);\n  });\n  if(old.length <= i)\n    return z._items[i] = v;\n}","title":"Action insertAt ( Arr z, Number i, v )","type":"Action"},{"source":"(z, target, v) => {\n  let i;\n  for(i in z._items)\n    if(nice.equal(target, z._items[i]))\n      break;\n  return z.insertAt(+i+1, v);\n}","title":"Action insertAfter ( Arr z, target, v )","type":"Action"},{"source":"(z, i) => {\n  i = +i;\n  const old = z._items;\n  z._oldValue = z._oldValue || {};\n  z._oldValue[i] = old[i];\n  z._items = [];\n  _each(old, (v, k) => +k === i || z._items.push(v));\n}","title":"Action removeAt ( Arr z, i )","type":"Action"},{"source":"(z, ...a) => {\n  z().forEach( f => f.apply(z, ...a) );\n  return z;\n}","title":"Func callEach ( Arr z, ...a )"},{"source":"(a, ...bs) => a._items[name](...bs)","title":"Action splice ( Arr a, ...bs )","type":"Action"},{"source":"function each(z, f){\n  const a = z._items;\n  const l = a.length;\n  for (let i = 0; i < l; i++)\n    if(nice.isStop(f(z.get(i), i)))\n      break;\n  return z;\n}","title":"Func each ( Arr z, Function f )"},{"source":"function each(z, f){\n  const a = z._items;\n  const l = a.length;\n  for (let i = 0; i < l; i++)\n    if(nice.isStop(f(z.get(i), i)))\n      break;\n  return z;\n}","title":"Func forEach ( Arr z, Function f )"},{"source":"function eachRight(z, f){\n  const a = z._items;\n  let i = a.length;\n  while (i-- > 0)\n    if(nice.isStop(f(z.get(i), i)))\n      break;\n  return z;\n}","title":"Func eachRight ( Arr z, Function f )"},{"source":"function fill(z, v, start = 0, end){\n  const l = z._items.length;\n  end === undefined && (end = l);\n  start < 0 && (start += l);\n  end < 0 && (end += l);\n  for(let i = start; i < end; i++){\n    z.set(i, v);\n  }\n}","title":"Action fill ( Arr z, v, start = 0, end )","type":"Action"},{"source":"function map(a, f){\n  return a.reduceTo.Arr((z, v, k) => z.push(f(v, k)));\n}","title":"Mapping map ( Arr a, Function f )","type":"Mapping"},{"source":"function map(a, f){\n  return a.reduce((z, v, k) => { z.push(f(v, k)); return z; }, []);\n}","title":"Mapping map ( Array a, Function f )","type":"Mapping"},{"source":"function rMap(a, f){\n  const res = a._type();\n  a.listen({\n    onAdd: (v, k) => res.insertAt(k, f(v, k)),\n    onRemove: (v, k) => res.removeAt(k)\n  });\n  return res;\n}","title":"Mapping rMap ( Arr a, f )","type":"Mapping"},{"source":"function filter(a, f){\n  return a.reduceTo(Arr(), (res, v, k) => f(v, k, a) && res.push(v));\n}","title":"Mapping filter ( Arr a, Function f )","type":"Mapping"},{"source":"function random(a){\n  return a.get(Math.random() * a.size | 0);\n}","title":"Mapping random ( Arr a )","type":"Mapping"},{"source":"function sortBy(a, f){\n  f = nice.mapper(f);\n  const res = Arr();\n  const source = a._items;\n  source\n    .map((v, k) => [k, f(v)])\n    .sort((a, b) => +(a[1] > b[1]) || +(a[1] === b[1]) - 1)\n    .forEach(v => res.push(source[v[0]]));\n  return res;\n}","title":"Mapping sortBy ( Arr a, f )","type":"Mapping"},{"source":"(a, v, f = (a, b) => a - b) => {\n  let i = a.size;\n  a.each((vv, k) => {\n    if(f(v, vv) <= 0){\n      i = k;\n      return nice.Stop();\n    }\n  });\n  return i;\n}","title":"Mapping sortedIndex ( Arr a, v, f = (a, b) => a - b )","type":"Mapping"},{"source":"(a, b) => {\n  const res = Arr();\n  a.each(v => b.includes(v) && res.push(v));\n  return res;\n}","title":"Mapping intersection ( Arr a, Array b )","type":"Mapping"},{"source":"(a, b) => {\n  const res = [];\n  a.forEach(v => is.includes(b, v) && res.push(v));\n  return res;\n}","title":"Mapping intersection ( Array a, Array b )","type":"Mapping"},{"source":"function intersperse(a, separator) {\n  const res = Arr();\n  const last = a.size - 1;\n  a.each((v, k) => res.push(v) && (k < last && res.push(separator)));\n  return res;\n}","title":"Mapping intersperse ( Arr a, separator )","description":"Creates new array with separator between elments.","type":"Mapping"},{"source":"function last(a) {\n  return a._items[a._items.length - 1];\n}","title":"Mapping last ( Arr a )","description":"Returns last element of `a`.","type":"Mapping"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNum ( v )","description":"Checks if value has type Num","type":"Check"},{"source":"(n, a, b) => n > a && n < b","title":"Check between ( Single n, Single a, Single b )","type":"Check"},{"source":"n => Number.isInteger(n)","title":"Check integer ( Number n )","type":"Check"},{"source":"n => Number.isSaveInteger(n)","title":"Check saveInteger ( Number n )","type":"Check"},{"source":"n => Number.isFinite(n)","title":"Check finite ( Number n )","type":"Check"},{"source":"(n, a) => n < a","title":"Check lt ( Single n, Single a )","type":"Check"},{"source":"(n, a) => n <= a","title":"Check lte ( Single n, Single a )","type":"Check"},{"source":"(n, a) => n > a","title":"Check gt ( Single n, Single a )","type":"Check"},{"source":"(n, a) => n >= a","title":"Check gte ( Single n, Single a )","type":"Check"},{"source":"(a, ...bs) => bs.reduce((x, y) => x + y, a)","title":"Mapping sum ( Number a, ...bs )","type":"Mapping"},{"source":"(a, b) => a - b","title":"Mapping difference ( Number a, b )","type":"Mapping"},{"source":"(a, b) => a * b","title":"Mapping product ( Number a, b )","type":"Mapping"},{"source":"(a, b) => a / b","title":"Mapping fraction ( Number a, b )","type":"Mapping"},{"source":"(a, b) => a % b","title":"Mapping reminder ( Number a, b )","type":"Mapping"},{"source":"n => n + 1","title":"Mapping next ( Number n )","type":"Mapping"},{"source":"n => n - 1","title":"Mapping previous ( Number n )","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping acos ( Number n, ...a )","description":"Delegates to Math.acos","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping asin ( Number n, ...a )","description":"Delegates to Math.asin","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping atan ( Number n, ...a )","description":"Delegates to Math.atan","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping ceil ( Number n, ...a )","description":"Delegates to Math.ceil","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping clz32 ( Number n, ...a )","description":"Delegates to Math.clz32","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping floor ( Number n, ...a )","description":"Delegates to Math.floor","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping fround ( Number n, ...a )","description":"Delegates to Math.fround","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping imul ( Number n, ...a )","description":"Delegates to Math.imul","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping max ( Number n, ...a )","description":"Delegates to Math.max","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping min ( Number n, ...a )","description":"Delegates to Math.min","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping round ( Number n, ...a )","description":"Delegates to Math.round","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sqrt ( Number n, ...a )","description":"Delegates to Math.sqrt","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping trunc ( Number n, ...a )","description":"Delegates to Math.trunc","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping abs ( Number n, ...a )","description":"Delegates to Math.abs","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping exp ( Number n, ...a )","description":"Delegates to Math.exp","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log ( Number n, ...a )","description":"Delegates to Math.log","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping atan2 ( Number n, ...a )","description":"Delegates to Math.atan2","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping pow ( Number n, ...a )","description":"Delegates to Math.pow","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sign ( Number n, ...a )","description":"Delegates to Math.sign","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping asinh ( Number n, ...a )","description":"Delegates to Math.asinh","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping acosh ( Number n, ...a )","description":"Delegates to Math.acosh","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping atanh ( Number n, ...a )","description":"Delegates to Math.atanh","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping hypot ( Number n, ...a )","description":"Delegates to Math.hypot","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping cbrt ( Number n, ...a )","description":"Delegates to Math.cbrt","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping cos ( Number n, ...a )","description":"Delegates to Math.cos","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sin ( Number n, ...a )","description":"Delegates to Math.sin","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping tan ( Number n, ...a )","description":"Delegates to Math.tan","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sinh ( Number n, ...a )","description":"Delegates to Math.sinh","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping cosh ( Number n, ...a )","description":"Delegates to Math.cosh","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping tanh ( Number n, ...a )","description":"Delegates to Math.tanh","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log10 ( Number n, ...a )","description":"Delegates to Math.log10","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log2 ( Number n, ...a )","description":"Delegates to Math.log2","type":"Mapping"},{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log1pexpm1 ( Number n, ...a )","description":"Delegates to Math.log1pexpm1","type":"Mapping"},{"source":"(n, min, max) => {\n  if(max === undefined){\n    max = min;\n    min = 0;\n  }\n  return n < min\n    ? min\n    : n > max\n      ? max\n      : n;\n}","title":"Mapping clamp ( Number n, min, max )","type":"Mapping"},{"source":"(n, f) => {\n  let i = 0;\n  const res = [];\n  while(i < n) res.push(f(i++));\n  return res;\n}","title":"Mapping times ( Number n, Function f )","type":"Mapping"},{"source":"(z, n = 1) => z(z() + n)","title":"Action inc ( Num z, n = 1 )","type":"Action"},{"source":"(z, n = 1) => z(z() - n)","title":"Action dec ( Num z, n = 1 )","type":"Action"},{"source":"(z, n) => z(z() / n)","title":"Action divide ( Num z, n )","type":"Action"},{"source":"(z, n) => z(z() * n)","title":"Action multiply ( Num z, n )","type":"Action"},{"source":"z => z(-z())","title":"Action negate ( Num z )","type":"Action"},{"source":"(z, n) => n > z() && z(n)","title":"Action setMax ( Num z, n )","type":"Action"},{"source":"(z, n) => n < z() && z(n)","title":"Action setMin ( Num z, n )","type":"Action"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isStr ( v )","description":"Checks if value has type Str","type":"Check"},{"source":"(s, p, l) => s.endsWith(p, l)","title":"Check endsWith ( String s, p, l )","type":"Check"},{"source":"(s, p, i) => s.startsWith(p, i)","title":"Check startsWith ( String s, p, i )","type":"Check"},{"source":"(s, p, i) => s.includes(p, i)","title":"Check includes ( String s, p, i )","type":"Check"},{"source":"(s, r) => r.test(s)","title":"Check test ( String s, r )","type":"Check"},{"source":"(s, a = whiteSpaces) => {\n    let i = 0;\n    while(a.indexOf(s[i]) >= 0) i++;\n    return s.substr(i);\n  }","title":"Mapping trimLeft ( String s, a = whiteSpaces )","type":"Mapping"},{"source":"(s, a = whiteSpaces) => {\n    let i = s.length - 1;\n    while(a.indexOf(s[i]) >= 0) i--;\n    return s.substr(0, i + 1);\n  }","title":"Mapping trimRight ( String s, a = whiteSpaces )","type":"Mapping"},{"source":"(s, a) => sf.trimRight(sf.trimLeft(s, a), a)","title":"Mapping trim ( String s, a )","type":"Mapping"},{"source":"(s, n, tale) => s.length > n ? s.substr(0, n) + (tale || '') : s","title":"Mapping truncate ( String s, n, tale )","type":"Mapping"},{"source":"s => s[0].toUpperCase() + s.substr(1)","title":"Mapping capitalize ( String s )","type":"Mapping"},{"source":"s => s[0].toLowerCase() + s.substr(1)","title":"Mapping deCapitalize ( String s )","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping toLocaleLowerCase ( String s, ...a )","description":"Delegates to String.prototype.toLocaleLowerCase().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping toLocaleUpperCase ( String s, ...a )","description":"Delegates to String.prototype.toLocaleUpperCase().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping toLowerCase ( String s, ...a )","description":"Delegates to String.prototype.toLowerCase().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping toUpperCase ( String s, ...a )","description":"Delegates to String.prototype.toUpperCase().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping charAt ( String s, ...a )","description":"Delegates to String.prototype.charAt().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping charCodeAt ( String s, ...a )","description":"Delegates to String.prototype.charCodeAt().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping codePointAt ( String s, ...a )","description":"Delegates to String.prototype.codePointAt().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping concat ( String s, ...a )","description":"Delegates to String.prototype.concat().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping indexOf ( String s, ...a )","description":"Delegates to String.prototype.indexOf().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping lastIndexOf ( String s, ...a )","description":"Delegates to String.prototype.lastIndexOf().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping normalize ( String s, ...a )","description":"Delegates to String.prototype.normalize().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping padEnd ( String s, ...a )","description":"Delegates to String.prototype.padEnd().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping padStart ( String s, ...a )","description":"Delegates to String.prototype.padStart().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping repeat ( String s, ...a )","description":"Delegates to String.prototype.repeat().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping substr ( String s, ...a )","description":"Delegates to String.prototype.substr().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping substring ( String s, ...a )","description":"Delegates to String.prototype.substring().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping slice ( String s, ...a )","description":"Delegates to String.prototype.slice().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping split ( String s, ...a )","description":"Delegates to String.prototype.split().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping search ( String s, ...a )","description":"Delegates to String.prototype.search().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping replace ( String s, ...a )","description":"Delegates to String.prototype.replace().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping match ( String s, ...a )","description":"Delegates to String.prototype.match().","type":"Mapping"},{"source":"(s, ...a) => s[k](...a)","title":"Mapping localeCompare ( String s, ...a )","description":"Delegates to String.prototype.localeCompare().","type":"Mapping"},{"source":"function fromCharCode() { [native code] }","title":"Mapping fromCharCode ( Number )","type":"Mapping"},{"source":"function fromCodePoint() { [native code] }","title":"Mapping fromCodePoint ( Number )","type":"Mapping"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isPointer ( v )","description":"Checks if value has type Pointer","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isBool ( v )","description":"Checks if value has type Bool","type":"Check"},{"source":"z => z(true)","title":"Action turnOn ( Bool z )","type":"Action"},{"source":"z => z(false)","title":"Action turnOff ( Bool z )","type":"Action"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isRange ( v )","description":"Checks if value has type Range","type":"Check"},{"source":"function each(z, f){\n    let i = z.start();\n    let end = z.end();\n    let n = 0;\n    while(i <= end) f(i++, n++);\n  }","title":"Func each ( Range z, f )"},{"source":"function map(z, f){\n    let i = z.start();\n    let n = 0;\n    const a = nice.Arr();\n    while(i <= z.end()) a(f(i++, n++));\n    return a;\n  }","title":"Mapping map ( Range z, f )","type":"Mapping"},{"source":"function filter(z, f){\n    let i = z.start();\n    let n = 0;\n    const a = nice.Arr();\n    while(i <= z.end()) {\n      f(i, n) && a(n);\n      i++;\n      n++;\n    }\n    return a;\n  }","title":"Mapping filter ( Range z, f )","type":"Mapping"},{"source":"function toArray(z){\n    const a = [];\n    const end = z.end();\n    let i = z.start();\n    while(i <= end) a.push(i++);\n    return a;\n  }","title":"Mapping toArray ( Range z )","type":"Mapping"},{"source":"function includes(z, n){\n    return n >= z.start && n <= z.end;\n  }","title":"Check includes ( Range z, n )","type":"Check"},{"source":"function within(v, r){\n  return v >= r.start && v <= r.end;\n}","title":"Func within ( Num v, Range r )"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isHtml ( v )","description":"Checks if value has type Html","type":"Check"},{"source":"function on(z, name, f){\n    if(name === 'domNode' && nice.isEnvBrowser()){\n      if(!z.id())\n        throw `Give element an id to use domNode event.`;\n      const el = document.getElementById(z.id());\n      el && f(el);\n    }\n    const handlers = z.eventHandlers.get(name);\n    handlers ? handlers.push(f) : z.eventHandlers.set(name, [f]);\n    return z;\n  }","title":"Action on ( Html z, name, f )","description":"Adds event handler to an element.","type":"Action"},{"source":"(z, ...vs) => {\n    const current = z.attributes.get('className') || '';\n    if(!vs.length)\n      return current;\n    const a = current ? current.split(' ') : [];\n    vs.forEach(v => !v || a.includes(v) || a.push(v));\n    z.attributes.set('className', a.join(' '));\n    return z;\n  }","title":"Func class ( Html z, ...vs )","description":"Adds values to className attribute."},{"source":"function scrollTo(z, offset = 10){\n    z.on('domNode', n => {\n      n && window.scrollTo(n.offsetLeft - offset, n.offsetTop - offset);\n    });\n    return z;\n  }","title":"Func scrollTo ( Html z, offset = 10 )","description":"Scroll browser screen to an element."},{"source":"(z, o, f) => {\n        const positions = {};\n        o.listen({\n            onRemove: (v, k) => z.children.remove(positions[k]),\n            onAdd: (v, k) => {\n              const i = o.isArr() ? k : Object.keys(o()).indexOf(k);\n              positions[k] = i;\n              z.children.insertAt(i, f(v, k));\n            }\n          }, z.children);\n      }","title":"Action mapChildren ( Html z, Obj o, f )","description":"Map provided Obj with provided function and add result as children.","type":"Action"},{"source":"(z, o, f) => {\n        nice._each(o, (v, k) => z.add(f(v, k)));\n      }","title":"Action mapChildren ( Html z, Object o, f )","description":"Map provided Object with provided function and add result as children.","type":"Action"},{"source":"(z, a, f) => {\n        a.listen({\n          onRemove: (v, k) => z.children.removeAt(k),\n          onAdd: (v, k) => z.children.insertAt(k, f(v, k))\n        }, z.children);\n      }","title":"Action mapChildren ( Html z, Arr a, f )","description":"Map provided array with provided function and add result as children.","type":"Action"},{"source":"(z, a, f) => a.forEach((v, k) => z.add(f(v, k)))","title":"Action mapChildren ( Html z, Array a, f )","description":"Map provided array with provided function and add result as children.","type":"Action"},{"source":"(z, preventScroll) =>\n      z.on('domNode', node => node.focus(preventScroll))","title":"Action focus ( Html z, preventScroll )","description":"Focuses DOM element.","type":"Action"},{"source":"function add(z, ...children) {\n    children.forEach(c => {\n      if(nice.isArray(c))\n        return _each(c, _c => z.add(_c));\n      if(nice.isArr(c))\n        return c.each(_c => z.add(_c));\n      if(c === undefined || c === null)\n        return;\n      if(nice.isString(c) || nice.isStr(c))\n        return z.children(c);\n      if(nice.isNumber(c) || nice.isNum(c))\n        return z.children(c);\n      if(c === z)\n        return z.children(`Errro: Can't add element to itself.`);\n      if(!c || !nice.isAnything(c))\n        return z.children('Bad child: ' + c);\n      c.up = z;\n      c._up_ = z;\n      z.children.push(c);\n    });\n  }","title":"Action add ( Html z, ...children )","description":"Adds children to an element.","type":"Action"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isStyle ( v )","description":"Checks if value has type Style","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isDiv ( v )","description":"Checks if value has type Div","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isI ( v )","description":"Checks if value has type I","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isB ( v )","description":"Checks if value has type B","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSpan ( v )","description":"Checks if value has type Span","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH1 ( v )","description":"Checks if value has type H1","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH2 ( v )","description":"Checks if value has type H2","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH3 ( v )","description":"Checks if value has type H3","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH4 ( v )","description":"Checks if value has type H4","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH5 ( v )","description":"Checks if value has type H5","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH6 ( v )","description":"Checks if value has type H6","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isP ( v )","description":"Checks if value has type P","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isLi ( v )","description":"Checks if value has type Li","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isUl ( v )","description":"Checks if value has type Ul","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isOl ( v )","description":"Checks if value has type Ol","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isPre ( v )","description":"Checks if value has type Pre","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isA ( v )","description":"Checks if value has type A","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isImg ( v )","description":"Checks if value has type Img","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isInput ( v )","description":"Checks if value has type Input","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isButton ( v )","description":"Checks if value has type Button","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isTextarea ( v )","description":"Checks if value has type Textarea","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSubmit ( v )","description":"Checks if value has type Submit","type":"Check"},{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isCheckbox ( v )","description":"Checks if value has type Checkbox","type":"Check"}],"fs":{"isCheck":{"Check isCheck ( v )":{"source":"v => v.functionType === t","title":"Check isCheck ( v )","description":"Checks if value is function and it's type is Check.","type":"Check"}},"isAction":{"Check isAction ( v )":{"source":"v => v.functionType === t","title":"Check isAction ( v )","description":"Checks if value is function and it's type is Action.","type":"Check"}},"isMapping":{"Check isMapping ( v )":{"source":"v => v.functionType === t","title":"Check isMapping ( v )","description":"Checks if value is function and it's type is Mapping.","type":"Check"}},"equal":{"Check equal ( a, b )":{"source":"equal(a, b) {\n    if(a === b)\n      return true;\n    if(a && a._isAnything && '_value' in a)\n      a = a._value;\n    if(b && b._isAnything  && '_value' in b)\n      b = b._value;\n    return a === b;\n  }","title":"Check equal ( a, b )","type":"Check"}},"isTrue":{"Check isTrue ( v )":{"source":"v => v === true","title":"Check isTrue ( v )","type":"Check"}},"isFalse":{"Check isFalse ( v )":{"source":"v => v === false","title":"Check isFalse ( v )","type":"Check"}},"isAnyOf":{"Check isAnyOf ( v, ...vs )":{"source":"(v, ...vs) => vs.includes(v)","title":"Check isAnyOf ( v, ...vs )","type":"Check"}},"isTruly":{"Check isTruly ( v )":{"source":"v => v\n    ? v._isAnything\n      ? v.isNothing() ? false : !!v()\n      : true\n    : false","title":"Check isTruly ( v )","type":"Check"}},"isFalsy":{"Check isFalsy ( v )":{"source":"v => !nice.isTruly(v)","title":"Check isFalsy ( v )","type":"Check"}},"isEmpty":{"Check isEmpty ( v )":{"source":"v => {\n    if(nice.isNothing(v) || v === null)\n      return true;\n    if(v === 0 || v === '' || v === false)\n      return false;\n    if(Array.isArray(v))\n      return !v.length;\n    if(typeof v === 'object')\n      return !Object.keys(v).length;\n    return !v;\n  }","title":"Check isEmpty ( v )","type":"Check"}},"isSubType":{"Check isSubType ( a, b )":{"source":"(a, b) => {\n    nice.isString(a) && (a = nice.Type(a));\n    nice.isString(b) && (b = nice.Type(b));\n    return a === b || b.isPrototypeOf(a);\n  }","title":"Check isSubType ( a, b )","type":"Check"}},"isEnvBrowser":{"Check isEnvBrowser (  )":{"source":"() => typeof window !== 'undefined'","title":"Check isEnvBrowser (  )","type":"Check"}},"isjs":{"Check isjs ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isjs ( v )","description":"Checks if value is js.","type":"Check"}},"isprimitive":{"Check isprimitive ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isprimitive ( v )","description":"Checks if value is primitive.","type":"Check"}},"isObject":{"Check isObject ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isObject ( v )","description":"Checks if value is Object.","type":"Check"}},"isString":{"Check isString ( v )":{"source":"v => typeof v === low","title":"Check isString ( v )","description":"Checks if value is String.","type":"Check"}},"isBoolean":{"Check isBoolean ( v )":{"source":"v => typeof v === low","title":"Check isBoolean ( v )","description":"Checks if value is Boolean.","type":"Check"}},"isNumber":{"Check isNumber ( v )":{"source":"v => typeof v === low","title":"Check isNumber ( v )","description":"Checks if value is Number.","type":"Check"}},"isundefined":{"Check isundefined ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isundefined ( v )","description":"Checks if value is undefined.","type":"Check"}},"isnull":{"Check isnull ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isnull ( v )","description":"Checks if value is null.","type":"Check"}},"isSymbol":{"Check isSymbol ( v )":{"source":"v => typeof v === low","title":"Check isSymbol ( v )","description":"Checks if value is Symbol.","type":"Check"}},"isFunction":{"Check isFunction ( v )":{"source":"v => typeof v === low","title":"Check isFunction ( v )","description":"Checks if value is Function.","type":"Check"}},"isDate":{"Check isDate ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isDate ( v )","description":"Checks if value is Date.","type":"Check"}},"isRegExp":{"Check isRegExp ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isRegExp ( v )","description":"Checks if value is RegExp.","type":"Check"}},"isArray":{"Check isArray ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isArray ( v )","description":"Checks if value is Array.","type":"Check"}},"isError":{"Check isError ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isError ( v )","description":"Checks if value is Error.","type":"Check"}},"isArrayBuffer":{"Check isArrayBuffer ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isArrayBuffer ( v )","description":"Checks if value is ArrayBuffer.","type":"Check"}},"isDataView":{"Check isDataView ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isDataView ( v )","description":"Checks if value is DataView.","type":"Check"}},"isMap":{"Check isMap ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isMap ( v )","description":"Checks if value is Map.","type":"Check"}},"isWeakMap":{"Check isWeakMap ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isWeakMap ( v )","description":"Checks if value is WeakMap.","type":"Check"}},"isSet":{"Check isSet ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isSet ( v )","description":"Checks if value is Set.","type":"Check"}},"isWeakSet":{"Check isWeakSet ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isWeakSet ( v )","description":"Checks if value is WeakSet.","type":"Check"}},"isPromise":{"Check isPromise ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isPromise ( v )","description":"Checks if value is Promise.","type":"Check"}},"isEvalError":{"Check isEvalError ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isEvalError ( v )","description":"Checks if value is EvalError.","type":"Check"}},"isRangeError":{"Check isRangeError ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isRangeError ( v )","description":"Checks if value is RangeError.","type":"Check"}},"isReferenceError":{"Check isReferenceError ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isReferenceError ( v )","description":"Checks if value is ReferenceError.","type":"Check"}},"isSyntaxError":{"Check isSyntaxError ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isSyntaxError ( v )","description":"Checks if value is SyntaxError.","type":"Check"}},"isTSypeError":{"Check isTSypeError ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isTSypeError ( v )","description":"Checks if value is TSypeError.","type":"Check"}},"isUriError":{"Check isUriError ( v )":{"source":"v => v && v.constructor ? v.constructor.name === i : false","title":"Check isUriError ( v )","description":"Checks if value is UriError.","type":"Check"}},"isAnything":{"Check isAnything ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isAnything ( v )","description":"Checks if value has type Anything","type":"Check"}},"isType":{"Check isType ( v )":{"source":"v => nice.Anything.isPrototypeOf(v)","title":"Check isType ( v )","type":"Check"}},"isNothing":{"Check isNothing ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNothing ( v )","description":"Checks if value has type Nothing","type":"Check"}},"isUndefined":{"Check isUndefined ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isUndefined ( v )","description":"Checks if value has type Undefined","type":"Check"}},"isNull":{"Check isNull ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNull ( v )","description":"Checks if value has type Null","type":"Check"}},"isFail":{"Check isFail ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isFail ( v )","description":"Checks if value has type Fail","type":"Check"}},"isNeedComputing":{"Check isNeedComputing ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNeedComputing ( v )","description":"Checks if value has type NeedComputing","type":"Check"}},"isPending":{"Check isPending ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isPending ( v )","description":"Checks if value has type Pending","type":"Check"}},"isStop":{"Check isStop ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isStop ( v )","description":"Checks if value has type Stop","type":"Check"}},"isNumberError":{"Check isNumberError ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNumberError ( v )","description":"Checks if value has type NumberError","type":"Check"}},"isSomething":{"Check isSomething ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSomething ( v )","description":"Checks if value has type Something","type":"Check"}},"isOk":{"Check isOk ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isOk ( v )","description":"Checks if value has type Ok","type":"Check"}},"or":{"Mapping or ( Anything ...as )":{"source":"(...as) => {\n  let v;\n  for(let i in as){\n    v = nice(as[i]);\n    if(nice.isSomething(v) && v._value !== false)\n      return v;\n  }\n  return v || nice.Nothing();\n}","title":"Mapping or ( Anything ...as )","type":"Mapping"}},"and":{"Func and ( Anything ...as )":{"source":"(...as) => {\n  let v;\n  for(let i in as){\n    v = nice(as[i]);\n    if(!nice.isSomething(v) || v._value === false)\n      return v;\n  }\n  return v;\n}","title":"Func and ( Anything ...as )"}},"nor":{"Func nor ( Anything ...as )":{"source":"(...as) => {\n  let v;\n  for(let i in as){\n    v = nice(as[i]);\n    if(nice.isSomething(v) && v._value !== false)\n      return nice(false);\n  }\n  return nice(true);\n}","title":"Func nor ( Anything ...as )"}},"xor":{"Func xor ( Anything ...as )":{"source":"(...as) => {\n  let count = 0;\n  for(let i in as){\n    const v = nice(as[i]);\n    if(nice.isSomething(v) && v._value !== false)\n      count++;\n  }\n  return nice(count && count < as.length ? true : false);\n}","title":"Func xor ( Anything ...as )"}},"isValue":{"Check isValue ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isValue ( v )","description":"Checks if value has type Value","type":"Check"}},"isObj":{"Check isObj ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isObj ( v )","description":"Checks if value has type Obj","type":"Check"}},"itemsType":{"Action itemsType ( Obj z, t )":{"source":"function itemsType(z, t){\n    z._itemsType = t;\n  }","title":"Action itemsType ( Obj z, t )","type":"Action"}},"each":{"Func each ( Nothing )":{"source":"() => 0","title":"Func each ( Nothing )"},"Func each ( Obj o, f )":{"source":"function each(o, f){\n  for(let k in o._items)\n    if(nice.isStop(f(o._items[k], k)))\n      break;\n  return o;\n}","title":"Func each ( Obj o, f )"},"Func each ( Arr z, Function f )":{"source":"function each(z, f){\n  const a = z._items;\n  const l = a.length;\n  for (let i = 0; i < l; i++)\n    if(nice.isStop(f(z.get(i), i)))\n      break;\n  return z;\n}","title":"Func each ( Arr z, Function f )"},"Func each ( Range z, f )":{"source":"function each(z, f){\n    let i = z.start();\n    let end = z.end();\n    let n = 0;\n    while(i <= end) f(i++, n++);\n  }","title":"Func each ( Range z, f )"}},"has":{"Check has ( Obj o, k )":{"source":"(o, k) => o._items.hasOwnProperty(k)","title":"Check has ( Obj o, k )","type":"Check"}},"reverseEach":{"Func reverseEach ( Obj o, f )":{"source":"(o, f) => {\n  Object.keys(o._items).reverse().forEach(k => f(o._items[k], k));\n}","title":"Func reverseEach ( Obj o, f )"}},"get":{"Mapping get ( Object o, i )":{"source":"(o, i) => o[''+i]","title":"Mapping get ( Object o, i )","type":"Mapping"},"Mapping get ( Obj z, i )":{"source":"(z, i) => {\n  if(i._isAnything === true)\n    i = i();\n  if(z._items.hasOwnProperty(i)){\n    return z._items[i];\n  }\n  const type = z._type.types[i];\n  return type\n    ? z._items[i] = type()\n    : undefined;\n}","title":"Mapping get ( Obj z, i )","type":"Mapping"}},"set":{"Action set ( Object o, i, v )":{"source":"(o, i, v) => o[''+i] = v","title":"Action set ( Object o, i, v )","type":"Action"},"Action set ( Obj z, i, v, ...tale )":{"source":"(z, i, v, ...tale) => {\n  i = z.checkKey(i);\n  z.transactionStart();\n  let res;\n  if(!nice.equal(v, z._items[i])){\n    z._oldValue = z._oldValue || {};\n    z._oldValue[i] = z._items[i];\n  }\n  const type = z._itemsType || (z._type.types && z._type.types[i]);\n  if(type){\n    if(v && v._isAnything){\n      if(!v._type.isSubType(type))\n        throw `Expected item type is ${type.name} but ${v._type.name} is given.`;\n      res = v;\n    } else {\n      res = type(v, ...tale);\n    }\n  } else {\n    res = v;\n  }\n  z._items[i] = res;\n  z._newValue = z._newValue || {};\n  z._newValue[i] = res;\n  z.transactionEnd();\n  return z;\n}","title":"Action set ( Obj z, i, v, ...tale )","type":"Action"}},"assign":{"Action assign ( Obj z, o )":{"source":"(z, o) => _each(o, (v, k) => z.set(k, v))","title":"Action assign ( Obj z, o )","type":"Action"}},"replaceAll":{"Action replaceAll ( Obj z, o )":{"source":"(z, o) => {\n  \n  z._oldValue = z._items;\n  z._items = o._items;\n}","title":"Action replaceAll ( Obj z, o )","type":"Action"}},"remove":{"Action remove ( Obj z, i )":{"source":"(z, i) => {\n  z._oldValue = z._oldValue || {};\n  z._oldValue[i] = z._items[i];\n  delete z._items[i];\n}","title":"Action remove ( Obj z, i )","type":"Action"}},"removeAll":{"Action removeAll ( Obj z )":{"source":"z => {\n  z._oldValue = z._items;\n  z._type.onCreate(z);\n}","title":"Action removeAll ( Obj z )","type":"Action"}},"reduce":{"Mapping reduce ( Obj o, f, res )":{"source":"function reduce(o, f, res){\n  for(let k in o._items)\n    res = f(res, o._items[k], k);\n  return res;\n}","title":"Mapping reduce ( Obj o, f, res )","type":"Mapping"},"Mapping reduce ( Arr a, Function f, res )":{"source":"(a, f, res) => {\n  each(a, (v, k) => res = f(res, v, k));\n  return res;\n}","title":"Mapping reduce ( Arr a, Function f, res )","type":"Mapping"}},"mapToArray":{"Mapping mapToArray ( Obj c, f )":{"source":"function mapToArray(c, f){\n  return c.reduceTo.Array((a, v, k) => a.push(f(c.get(k), k)));\n}","title":"Mapping mapToArray ( Obj c, f )","type":"Mapping"}},"map":{"Mapping map ( Nothing )":{"source":"() => nice.Nothing","title":"Mapping map ( Nothing )","type":"Mapping"},"Mapping map ( Object o, f )":{"source":"function map(o, f){\n  const res = {};\n  for(let i in o)\n    res[i] = f(o[i], i);\n  return res;\n}","title":"Mapping map ( Object o, f )","type":"Mapping"},"Mapping map ( Obj c, f )":{"source":"function map(c, f){\n  const res = c._type();\n  for(let i in c())\n    res.set(i, f(c.get(i), i));\n  return res;\n}","title":"Mapping map ( Obj c, f )","type":"Mapping"},"Mapping map ( Arr a, Function f )":{"source":"function map(a, f){\n  return a.reduceTo.Arr((z, v, k) => z.push(f(v, k)));\n}","title":"Mapping map ( Arr a, Function f )","type":"Mapping"},"Mapping map ( Array a, Function f )":{"source":"function map(a, f){\n  return a.reduce((z, v, k) => { z.push(f(v, k)); return z; }, []);\n}","title":"Mapping map ( Array a, Function f )","type":"Mapping"},"Mapping map ( Range z, f )":{"source":"function map(z, f){\n    let i = z.start();\n    let n = 0;\n    const a = nice.Arr();\n    while(i <= z.end()) a(f(i++, n++));\n    return a;\n  }","title":"Mapping map ( Range z, f )","type":"Mapping"}},"rMap":{"Mapping rMap ( Obj c, f )":{"source":"function rMap(c, f){\n  const res = c._type();\n  c.listen({\n    onAdd: (v, k) => res.set(k, f(v, k)),\n    onRemove: (v, k) => res.remove(k)\n  });\n  return res;\n}","title":"Mapping rMap ( Obj c, f )","type":"Mapping"},"Mapping rMap ( Arr a, f )":{"source":"function rMap(a, f){\n  const res = a._type();\n  a.listen({\n    onAdd: (v, k) => res.insertAt(k, f(v, k)),\n    onRemove: (v, k) => res.removeAt(k)\n  });\n  return res;\n}","title":"Mapping rMap ( Arr a, f )","type":"Mapping"}},"filter":{"Mapping filter ( Obj c, f )":{"source":"function filter(c, f){\n  return c._type().apply(z => c.each((v, k) => f(v,k) && z.set(k, v)));\n}","title":"Mapping filter ( Obj c, f )","type":"Mapping"},"Mapping filter ( Arr a, Function f )":{"source":"function filter(a, f){\n  return a.reduceTo(Arr(), (res, v, k) => f(v, k, a) && res.push(v));\n}","title":"Mapping filter ( Arr a, Function f )","type":"Mapping"},"Mapping filter ( Range z, f )":{"source":"function filter(z, f){\n    let i = z.start();\n    let n = 0;\n    const a = nice.Arr();\n    while(i <= z.end()) {\n      f(i, n) && a(n);\n      i++;\n      n++;\n    }\n    return a;\n  }","title":"Mapping filter ( Range z, f )","type":"Mapping"}},"rFilter":{"Mapping rFilter ( Obj c, f )":{"source":"function rFilter(c, f){\n  const res = c._type();\n  c.listen({\n    onAdd: (v, k) => f(v, k) && res.set(k, v),\n    onRemove: (v, k) => res.remove(k)\n  });\n  return res;\n}","title":"Mapping rFilter ( Obj c, f )","type":"Mapping"}},"sum":{"Mapping sum ( Obj c, f )":{"source":"function sum(c, f){\n  return c.reduce((n, v) => n + (f ? f(v) : v), 0);\n}","title":"Mapping sum ( Obj c, f )","type":"Mapping"},"Mapping sum ( Arr a, f )":{"source":"(a, f) => a.reduce(f ? (sum, n) => sum + f(n) : (sum, n) => sum + n, 0)","title":"Mapping sum ( Arr a, f )","type":"Mapping"},"Mapping sum ( Number a, ...bs )":{"source":"(a, ...bs) => bs.reduce((x, y) => x + y, a)","title":"Mapping sum ( Number a, ...bs )","type":"Mapping"}},"some":{"Check some ( Obj c, Function f )":{"source":"function some(c, f){\n  for(let i in c._items)\n    if(f(c._items[i], i))\n      return true;\n  return false;\n}","title":"Check some ( Obj c, Function f )","type":"Check"}},"every":{"Check every ( Obj c, f )":{"source":"function every(c, f){\n  for(let i in c._items)\n    if(!f(c._items[i], i))\n      return false;\n  return true;\n}","title":"Check every ( Obj c, f )","type":"Check"}},"find":{"Mapping find ( Obj c, f )":{"source":"function find(c, f){\n  for(let i in c._items)\n    if(f(c._items[i], i))\n      return c._items[i];\n}","title":"Mapping find ( Obj c, f )","type":"Mapping"}},"findKey":{"Mapping findKey ( Obj c, f )":{"source":"function findKey(c, f){\n  nice.isFunction(f) || (f = nice.equal(f, nice));\n  for(let i in c._items)\n    if(f(c._items[i], i))\n      return i;\n}","title":"Mapping findKey ( Obj c, f )","type":"Mapping"}},"count":{"Mapping count ( Obj o, Function f )":{"source":"function count(o, f) {\n  let n = 0;\n  o.each((v, k) => f(v, k) && n++);\n  return nice.Num(n);\n}","title":"Mapping count ( Obj o, Function f )","type":"Mapping"}},"includes":{"Check includes ( Obj o, t )":{"source":"(o, t) => {\n  for(let i in o)\n    if(o[i] === t)\n      return true;\n  return false;\n}","title":"Check includes ( Obj o, t )","type":"Check"},"Check includes ( Arr a, v )":{"source":"(a, v) => {\n  for(let i of a._items)\n    if(nice.equal(i, v))\n      return true;\n  return false;\n}","title":"Check includes ( Arr a, v )","type":"Check"},"Check includes ( String s, p, i )":{"source":"(s, p, i) => s.includes(p, i)","title":"Check includes ( String s, p, i )","type":"Check"},"Check includes ( Range z, n )":{"source":"function includes(z, n){\n    return n >= z.start && n <= z.end;\n  }","title":"Check includes ( Range z, n )","type":"Check"}},"getProperties":{"Mapping getProperties ( Obj z )":{"source":"function getProperties(z){\n  const res = [];\n  for(let i in z) z[i]._isProperty && res.push(z[i]);\n  return res;\n}","title":"Mapping getProperties ( Obj z )","type":"Mapping"}},"isBox":{"Check isBox ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isBox ( v )","description":"Checks if value has type Box","type":"Check"}},"isErr":{"Check isErr ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isErr ( v )","description":"Checks if value has type Err","type":"Check"}},"isSingle":{"Check isSingle ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSingle ( v )","description":"Checks if value has type Single","type":"Check"}},"isArr":{"Check isArr ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isArr ( v )","description":"Checks if value has type Arr","type":"Check"}},"push":{"Action push ( Arr z, ...a )":{"source":"function push(z, ...a) {\n    a.forEach(v => z.insertAt(z._items.length, v));\n  }","title":"Action push ( Arr z, ...a )","type":"Action"}},"reduceRight":{"Mapping reduceRight ( Arr a, Function f, res )":{"source":"(a, f, res) => {\n  a.eachRight((v, k) => res = f(res, v, k));\n  return res;\n}","title":"Mapping reduceRight ( Arr a, Function f, res )","type":"Mapping"}},"concat":{"Mapping concat ( Arr a, Array ...bs )":{"source":"(a, ...bs) => a._items.concat(...bs)","title":"Mapping concat ( Arr a, Array ...bs )","type":"Mapping"},"Mapping concat ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping concat ( String s, ...a )","description":"Delegates to String.prototype.concat().","type":"Mapping"}},"unshift":{"Action unshift ( Arr z, ...a )":{"source":"(z, ...a) => a.reverse().forEach(v => z.insertAt(0, v))","title":"Action unshift ( Arr z, ...a )","type":"Action"}},"add":{"Action add ( Arr z, ...a )":{"source":"(z, ...a) => {\n  a.forEach(v => z.includes(v) || z.push(v));\n}","title":"Action add ( Arr z, ...a )","type":"Action"},"Action add ( Html z, ...children )":{"source":"function add(z, ...children) {\n    children.forEach(c => {\n      if(nice.isArray(c))\n        return _each(c, _c => z.add(_c));\n      if(nice.isArr(c))\n        return c.each(_c => z.add(_c));\n      if(c === undefined || c === null)\n        return;\n      if(nice.isString(c) || nice.isStr(c))\n        return z.children(c);\n      if(nice.isNumber(c) || nice.isNum(c))\n        return z.children(c);\n      if(c === z)\n        return z.children(`Errro: Can't add element to itself.`);\n      if(!c || !nice.isAnything(c))\n        return z.children('Bad child: ' + c);\n      c.up = z;\n      c._up_ = z;\n      z.children.push(c);\n    });\n  }","title":"Action add ( Html z, ...children )","description":"Adds children to an element.","type":"Action"}},"pull":{"Action pull ( Arr z, item )":{"source":"(z, item) => {\n  const k = is.Value(item)\n    ? z.items.indexOf(item)\n    : z.findKey(v => item === v());\n  (k === -1 || k === undefined) || z.removeAt(k);\n}","title":"Action pull ( Arr z, item )","type":"Action"}},"insertAt":{"Action insertAt ( Arr z, Number i, v )":{"source":"(z, i, v) => {\n  i = +i;\n  const old = z._items;\n  z._oldValue = z._oldValue || {};\n  z._newValue = z._newValue || {};\n  z._newValue[i] = v;\n  z._items = [];\n  _each(old, (_v, k) => {\n    +k === i && z._items.push(v);\n    z._items.push(_v);\n  });\n  if(old.length <= i)\n    return z._items[i] = v;\n}","title":"Action insertAt ( Arr z, Number i, v )","type":"Action"}},"insertAfter":{"Action insertAfter ( Arr z, target, v )":{"source":"(z, target, v) => {\n  let i;\n  for(i in z._items)\n    if(nice.equal(target, z._items[i]))\n      break;\n  return z.insertAt(+i+1, v);\n}","title":"Action insertAfter ( Arr z, target, v )","type":"Action"}},"removeAt":{"Action removeAt ( Arr z, i )":{"source":"(z, i) => {\n  i = +i;\n  const old = z._items;\n  z._oldValue = z._oldValue || {};\n  z._oldValue[i] = old[i];\n  z._items = [];\n  _each(old, (v, k) => +k === i || z._items.push(v));\n}","title":"Action removeAt ( Arr z, i )","type":"Action"}},"callEach":{"Func callEach ( Arr z, ...a )":{"source":"(z, ...a) => {\n  z().forEach( f => f.apply(z, ...a) );\n  return z;\n}","title":"Func callEach ( Arr z, ...a )"}},"splice":{"Action splice ( Arr a, ...bs )":{"source":"(a, ...bs) => a._items[name](...bs)","title":"Action splice ( Arr a, ...bs )","type":"Action"}},"forEach":{"Func forEach ( Arr z, Function f )":{"source":"function each(z, f){\n  const a = z._items;\n  const l = a.length;\n  for (let i = 0; i < l; i++)\n    if(nice.isStop(f(z.get(i), i)))\n      break;\n  return z;\n}","title":"Func forEach ( Arr z, Function f )"}},"eachRight":{"Func eachRight ( Arr z, Function f )":{"source":"function eachRight(z, f){\n  const a = z._items;\n  let i = a.length;\n  while (i-- > 0)\n    if(nice.isStop(f(z.get(i), i)))\n      break;\n  return z;\n}","title":"Func eachRight ( Arr z, Function f )"}},"fill":{"Action fill ( Arr z, v, start = 0, end )":{"source":"function fill(z, v, start = 0, end){\n  const l = z._items.length;\n  end === undefined && (end = l);\n  start < 0 && (start += l);\n  end < 0 && (end += l);\n  for(let i = start; i < end; i++){\n    z.set(i, v);\n  }\n}","title":"Action fill ( Arr z, v, start = 0, end )","type":"Action"}},"random":{"Mapping random ( Arr a )":{"source":"function random(a){\n  return a.get(Math.random() * a.size | 0);\n}","title":"Mapping random ( Arr a )","type":"Mapping"}},"sortBy":{"Mapping sortBy ( Arr a, f )":{"source":"function sortBy(a, f){\n  f = nice.mapper(f);\n  const res = Arr();\n  const source = a._items;\n  source\n    .map((v, k) => [k, f(v)])\n    .sort((a, b) => +(a[1] > b[1]) || +(a[1] === b[1]) - 1)\n    .forEach(v => res.push(source[v[0]]));\n  return res;\n}","title":"Mapping sortBy ( Arr a, f )","type":"Mapping"}},"sortedIndex":{"Mapping sortedIndex ( Arr a, v, f = (a, b) => a - b )":{"source":"(a, v, f = (a, b) => a - b) => {\n  let i = a.size;\n  a.each((vv, k) => {\n    if(f(v, vv) <= 0){\n      i = k;\n      return nice.Stop();\n    }\n  });\n  return i;\n}","title":"Mapping sortedIndex ( Arr a, v, f = (a, b) => a - b )","type":"Mapping"}},"intersection":{"Mapping intersection ( Arr a, Array b )":{"source":"(a, b) => {\n  const res = Arr();\n  a.each(v => b.includes(v) && res.push(v));\n  return res;\n}","title":"Mapping intersection ( Arr a, Array b )","type":"Mapping"},"Mapping intersection ( Array a, Array b )":{"source":"(a, b) => {\n  const res = [];\n  a.forEach(v => is.includes(b, v) && res.push(v));\n  return res;\n}","title":"Mapping intersection ( Array a, Array b )","type":"Mapping"}},"intersperse":{"Mapping intersperse ( Arr a, separator )":{"source":"function intersperse(a, separator) {\n  const res = Arr();\n  const last = a.size - 1;\n  a.each((v, k) => res.push(v) && (k < last && res.push(separator)));\n  return res;\n}","title":"Mapping intersperse ( Arr a, separator )","description":"Creates new array with separator between elments.","type":"Mapping"}},"last":{"Mapping last ( Arr a )":{"source":"function last(a) {\n  return a._items[a._items.length - 1];\n}","title":"Mapping last ( Arr a )","description":"Returns last element of `a`.","type":"Mapping"}},"isNum":{"Check isNum ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isNum ( v )","description":"Checks if value has type Num","type":"Check"}},"between":{"Check between ( Single n, Single a, Single b )":{"source":"(n, a, b) => n > a && n < b","title":"Check between ( Single n, Single a, Single b )","type":"Check"}},"integer":{"Check integer ( Number n )":{"source":"n => Number.isInteger(n)","title":"Check integer ( Number n )","type":"Check"}},"saveInteger":{"Check saveInteger ( Number n )":{"source":"n => Number.isSaveInteger(n)","title":"Check saveInteger ( Number n )","type":"Check"}},"finite":{"Check finite ( Number n )":{"source":"n => Number.isFinite(n)","title":"Check finite ( Number n )","type":"Check"}},"lt":{"Check lt ( Single n, Single a )":{"source":"(n, a) => n < a","title":"Check lt ( Single n, Single a )","type":"Check"}},"lte":{"Check lte ( Single n, Single a )":{"source":"(n, a) => n <= a","title":"Check lte ( Single n, Single a )","type":"Check"}},"gt":{"Check gt ( Single n, Single a )":{"source":"(n, a) => n > a","title":"Check gt ( Single n, Single a )","type":"Check"}},"gte":{"Check gte ( Single n, Single a )":{"source":"(n, a) => n >= a","title":"Check gte ( Single n, Single a )","type":"Check"}},"difference":{"Mapping difference ( Number a, b )":{"source":"(a, b) => a - b","title":"Mapping difference ( Number a, b )","type":"Mapping"}},"product":{"Mapping product ( Number a, b )":{"source":"(a, b) => a * b","title":"Mapping product ( Number a, b )","type":"Mapping"}},"fraction":{"Mapping fraction ( Number a, b )":{"source":"(a, b) => a / b","title":"Mapping fraction ( Number a, b )","type":"Mapping"}},"reminder":{"Mapping reminder ( Number a, b )":{"source":"(a, b) => a % b","title":"Mapping reminder ( Number a, b )","type":"Mapping"}},"next":{"Mapping next ( Number n )":{"source":"n => n + 1","title":"Mapping next ( Number n )","type":"Mapping"}},"previous":{"Mapping previous ( Number n )":{"source":"n => n - 1","title":"Mapping previous ( Number n )","type":"Mapping"}},"acos":{"Mapping acos ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping acos ( Number n, ...a )","description":"Delegates to Math.acos","type":"Mapping"}},"asin":{"Mapping asin ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping asin ( Number n, ...a )","description":"Delegates to Math.asin","type":"Mapping"}},"atan":{"Mapping atan ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping atan ( Number n, ...a )","description":"Delegates to Math.atan","type":"Mapping"}},"ceil":{"Mapping ceil ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping ceil ( Number n, ...a )","description":"Delegates to Math.ceil","type":"Mapping"}},"clz32":{"Mapping clz32 ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping clz32 ( Number n, ...a )","description":"Delegates to Math.clz32","type":"Mapping"}},"floor":{"Mapping floor ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping floor ( Number n, ...a )","description":"Delegates to Math.floor","type":"Mapping"}},"fround":{"Mapping fround ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping fround ( Number n, ...a )","description":"Delegates to Math.fround","type":"Mapping"}},"imul":{"Mapping imul ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping imul ( Number n, ...a )","description":"Delegates to Math.imul","type":"Mapping"}},"max":{"Mapping max ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping max ( Number n, ...a )","description":"Delegates to Math.max","type":"Mapping"}},"min":{"Mapping min ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping min ( Number n, ...a )","description":"Delegates to Math.min","type":"Mapping"}},"round":{"Mapping round ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping round ( Number n, ...a )","description":"Delegates to Math.round","type":"Mapping"}},"sqrt":{"Mapping sqrt ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sqrt ( Number n, ...a )","description":"Delegates to Math.sqrt","type":"Mapping"}},"trunc":{"Mapping trunc ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping trunc ( Number n, ...a )","description":"Delegates to Math.trunc","type":"Mapping"}},"abs":{"Mapping abs ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping abs ( Number n, ...a )","description":"Delegates to Math.abs","type":"Mapping"}},"exp":{"Mapping exp ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping exp ( Number n, ...a )","description":"Delegates to Math.exp","type":"Mapping"}},"log":{"Mapping log ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log ( Number n, ...a )","description":"Delegates to Math.log","type":"Mapping"}},"atan2":{"Mapping atan2 ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping atan2 ( Number n, ...a )","description":"Delegates to Math.atan2","type":"Mapping"}},"pow":{"Mapping pow ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping pow ( Number n, ...a )","description":"Delegates to Math.pow","type":"Mapping"}},"sign":{"Mapping sign ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sign ( Number n, ...a )","description":"Delegates to Math.sign","type":"Mapping"}},"asinh":{"Mapping asinh ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping asinh ( Number n, ...a )","description":"Delegates to Math.asinh","type":"Mapping"}},"acosh":{"Mapping acosh ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping acosh ( Number n, ...a )","description":"Delegates to Math.acosh","type":"Mapping"}},"atanh":{"Mapping atanh ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping atanh ( Number n, ...a )","description":"Delegates to Math.atanh","type":"Mapping"}},"hypot":{"Mapping hypot ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping hypot ( Number n, ...a )","description":"Delegates to Math.hypot","type":"Mapping"}},"cbrt":{"Mapping cbrt ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping cbrt ( Number n, ...a )","description":"Delegates to Math.cbrt","type":"Mapping"}},"cos":{"Mapping cos ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping cos ( Number n, ...a )","description":"Delegates to Math.cos","type":"Mapping"}},"sin":{"Mapping sin ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sin ( Number n, ...a )","description":"Delegates to Math.sin","type":"Mapping"}},"tan":{"Mapping tan ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping tan ( Number n, ...a )","description":"Delegates to Math.tan","type":"Mapping"}},"sinh":{"Mapping sinh ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping sinh ( Number n, ...a )","description":"Delegates to Math.sinh","type":"Mapping"}},"cosh":{"Mapping cosh ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping cosh ( Number n, ...a )","description":"Delegates to Math.cosh","type":"Mapping"}},"tanh":{"Mapping tanh ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping tanh ( Number n, ...a )","description":"Delegates to Math.tanh","type":"Mapping"}},"log10":{"Mapping log10 ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log10 ( Number n, ...a )","description":"Delegates to Math.log10","type":"Mapping"}},"log2":{"Mapping log2 ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log2 ( Number n, ...a )","description":"Delegates to Math.log2","type":"Mapping"}},"log1pexpm1":{"Mapping log1pexpm1 ( Number n, ...a )":{"source":"(n, ...a) => Math[k](n, ...a)","title":"Mapping log1pexpm1 ( Number n, ...a )","description":"Delegates to Math.log1pexpm1","type":"Mapping"}},"clamp":{"Mapping clamp ( Number n, min, max )":{"source":"(n, min, max) => {\n  if(max === undefined){\n    max = min;\n    min = 0;\n  }\n  return n < min\n    ? min\n    : n > max\n      ? max\n      : n;\n}","title":"Mapping clamp ( Number n, min, max )","type":"Mapping"}},"times":{"Mapping times ( Number n, Function f )":{"source":"(n, f) => {\n  let i = 0;\n  const res = [];\n  while(i < n) res.push(f(i++));\n  return res;\n}","title":"Mapping times ( Number n, Function f )","type":"Mapping"}},"inc":{"Action inc ( Num z, n = 1 )":{"source":"(z, n = 1) => z(z() + n)","title":"Action inc ( Num z, n = 1 )","type":"Action"}},"dec":{"Action dec ( Num z, n = 1 )":{"source":"(z, n = 1) => z(z() - n)","title":"Action dec ( Num z, n = 1 )","type":"Action"}},"divide":{"Action divide ( Num z, n )":{"source":"(z, n) => z(z() / n)","title":"Action divide ( Num z, n )","type":"Action"}},"multiply":{"Action multiply ( Num z, n )":{"source":"(z, n) => z(z() * n)","title":"Action multiply ( Num z, n )","type":"Action"}},"negate":{"Action negate ( Num z )":{"source":"z => z(-z())","title":"Action negate ( Num z )","type":"Action"}},"setMax":{"Action setMax ( Num z, n )":{"source":"(z, n) => n > z() && z(n)","title":"Action setMax ( Num z, n )","type":"Action"}},"setMin":{"Action setMin ( Num z, n )":{"source":"(z, n) => n < z() && z(n)","title":"Action setMin ( Num z, n )","type":"Action"}},"isStr":{"Check isStr ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isStr ( v )","description":"Checks if value has type Str","type":"Check"}},"endsWith":{"Check endsWith ( String s, p, l )":{"source":"(s, p, l) => s.endsWith(p, l)","title":"Check endsWith ( String s, p, l )","type":"Check"}},"startsWith":{"Check startsWith ( String s, p, i )":{"source":"(s, p, i) => s.startsWith(p, i)","title":"Check startsWith ( String s, p, i )","type":"Check"}},"test":{"Check test ( String s, r )":{"source":"(s, r) => r.test(s)","title":"Check test ( String s, r )","type":"Check"}},"trimLeft":{"Mapping trimLeft ( String s, a = whiteSpaces )":{"source":"(s, a = whiteSpaces) => {\n    let i = 0;\n    while(a.indexOf(s[i]) >= 0) i++;\n    return s.substr(i);\n  }","title":"Mapping trimLeft ( String s, a = whiteSpaces )","type":"Mapping"}},"trimRight":{"Mapping trimRight ( String s, a = whiteSpaces )":{"source":"(s, a = whiteSpaces) => {\n    let i = s.length - 1;\n    while(a.indexOf(s[i]) >= 0) i--;\n    return s.substr(0, i + 1);\n  }","title":"Mapping trimRight ( String s, a = whiteSpaces )","type":"Mapping"}},"trim":{"Mapping trim ( String s, a )":{"source":"(s, a) => sf.trimRight(sf.trimLeft(s, a), a)","title":"Mapping trim ( String s, a )","type":"Mapping"}},"truncate":{"Mapping truncate ( String s, n, tale )":{"source":"(s, n, tale) => s.length > n ? s.substr(0, n) + (tale || '') : s","title":"Mapping truncate ( String s, n, tale )","type":"Mapping"}},"capitalize":{"Mapping capitalize ( String s )":{"source":"s => s[0].toUpperCase() + s.substr(1)","title":"Mapping capitalize ( String s )","type":"Mapping"}},"deCapitalize":{"Mapping deCapitalize ( String s )":{"source":"s => s[0].toLowerCase() + s.substr(1)","title":"Mapping deCapitalize ( String s )","type":"Mapping"}},"toLocaleLowerCase":{"Mapping toLocaleLowerCase ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping toLocaleLowerCase ( String s, ...a )","description":"Delegates to String.prototype.toLocaleLowerCase().","type":"Mapping"}},"toLocaleUpperCase":{"Mapping toLocaleUpperCase ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping toLocaleUpperCase ( String s, ...a )","description":"Delegates to String.prototype.toLocaleUpperCase().","type":"Mapping"}},"toLowerCase":{"Mapping toLowerCase ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping toLowerCase ( String s, ...a )","description":"Delegates to String.prototype.toLowerCase().","type":"Mapping"}},"toUpperCase":{"Mapping toUpperCase ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping toUpperCase ( String s, ...a )","description":"Delegates to String.prototype.toUpperCase().","type":"Mapping"}},"charAt":{"Mapping charAt ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping charAt ( String s, ...a )","description":"Delegates to String.prototype.charAt().","type":"Mapping"}},"charCodeAt":{"Mapping charCodeAt ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping charCodeAt ( String s, ...a )","description":"Delegates to String.prototype.charCodeAt().","type":"Mapping"}},"codePointAt":{"Mapping codePointAt ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping codePointAt ( String s, ...a )","description":"Delegates to String.prototype.codePointAt().","type":"Mapping"}},"indexOf":{"Mapping indexOf ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping indexOf ( String s, ...a )","description":"Delegates to String.prototype.indexOf().","type":"Mapping"}},"lastIndexOf":{"Mapping lastIndexOf ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping lastIndexOf ( String s, ...a )","description":"Delegates to String.prototype.lastIndexOf().","type":"Mapping"}},"normalize":{"Mapping normalize ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping normalize ( String s, ...a )","description":"Delegates to String.prototype.normalize().","type":"Mapping"}},"padEnd":{"Mapping padEnd ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping padEnd ( String s, ...a )","description":"Delegates to String.prototype.padEnd().","type":"Mapping"}},"padStart":{"Mapping padStart ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping padStart ( String s, ...a )","description":"Delegates to String.prototype.padStart().","type":"Mapping"}},"repeat":{"Mapping repeat ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping repeat ( String s, ...a )","description":"Delegates to String.prototype.repeat().","type":"Mapping"}},"substr":{"Mapping substr ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping substr ( String s, ...a )","description":"Delegates to String.prototype.substr().","type":"Mapping"}},"substring":{"Mapping substring ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping substring ( String s, ...a )","description":"Delegates to String.prototype.substring().","type":"Mapping"}},"slice":{"Mapping slice ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping slice ( String s, ...a )","description":"Delegates to String.prototype.slice().","type":"Mapping"}},"split":{"Mapping split ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping split ( String s, ...a )","description":"Delegates to String.prototype.split().","type":"Mapping"}},"search":{"Mapping search ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping search ( String s, ...a )","description":"Delegates to String.prototype.search().","type":"Mapping"}},"replace":{"Mapping replace ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping replace ( String s, ...a )","description":"Delegates to String.prototype.replace().","type":"Mapping"}},"match":{"Mapping match ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping match ( String s, ...a )","description":"Delegates to String.prototype.match().","type":"Mapping"}},"localeCompare":{"Mapping localeCompare ( String s, ...a )":{"source":"(s, ...a) => s[k](...a)","title":"Mapping localeCompare ( String s, ...a )","description":"Delegates to String.prototype.localeCompare().","type":"Mapping"}},"fromCharCode":{"Mapping fromCharCode ( Number )":{"source":"function fromCharCode() { [native code] }","title":"Mapping fromCharCode ( Number )","type":"Mapping"}},"fromCodePoint":{"Mapping fromCodePoint ( Number )":{"source":"function fromCodePoint() { [native code] }","title":"Mapping fromCodePoint ( Number )","type":"Mapping"}},"isPointer":{"Check isPointer ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isPointer ( v )","description":"Checks if value has type Pointer","type":"Check"}},"isBool":{"Check isBool ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isBool ( v )","description":"Checks if value has type Bool","type":"Check"}},"turnOn":{"Action turnOn ( Bool z )":{"source":"z => z(true)","title":"Action turnOn ( Bool z )","type":"Action"}},"turnOff":{"Action turnOff ( Bool z )":{"source":"z => z(false)","title":"Action turnOff ( Bool z )","type":"Action"}},"isRange":{"Check isRange ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isRange ( v )","description":"Checks if value has type Range","type":"Check"}},"toArray":{"Mapping toArray ( Range z )":{"source":"function toArray(z){\n    const a = [];\n    const end = z.end();\n    let i = z.start();\n    while(i <= end) a.push(i++);\n    return a;\n  }","title":"Mapping toArray ( Range z )","type":"Mapping"}},"within":{"Func within ( Num v, Range r )":{"source":"function within(v, r){\n  return v >= r.start && v <= r.end;\n}","title":"Func within ( Num v, Range r )"}},"isHtml":{"Check isHtml ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isHtml ( v )","description":"Checks if value has type Html","type":"Check"}},"on":{"Action on ( Html z, name, f )":{"source":"function on(z, name, f){\n    if(name === 'domNode' && nice.isEnvBrowser()){\n      if(!z.id())\n        throw `Give element an id to use domNode event.`;\n      const el = document.getElementById(z.id());\n      el && f(el);\n    }\n    const handlers = z.eventHandlers.get(name);\n    handlers ? handlers.push(f) : z.eventHandlers.set(name, [f]);\n    return z;\n  }","title":"Action on ( Html z, name, f )","description":"Adds event handler to an element.","type":"Action"}},"class":{"Func class ( Html z, ...vs )":{"source":"(z, ...vs) => {\n    const current = z.attributes.get('className') || '';\n    if(!vs.length)\n      return current;\n    const a = current ? current.split(' ') : [];\n    vs.forEach(v => !v || a.includes(v) || a.push(v));\n    z.attributes.set('className', a.join(' '));\n    return z;\n  }","title":"Func class ( Html z, ...vs )","description":"Adds values to className attribute."}},"scrollTo":{"Func scrollTo ( Html z, offset = 10 )":{"source":"function scrollTo(z, offset = 10){\n    z.on('domNode', n => {\n      n && window.scrollTo(n.offsetLeft - offset, n.offsetTop - offset);\n    });\n    return z;\n  }","title":"Func scrollTo ( Html z, offset = 10 )","description":"Scroll browser screen to an element."}},"mapChildren":{"Action mapChildren ( Html z, Obj o, f )":{"source":"(z, o, f) => {\n        const positions = {};\n        o.listen({\n            onRemove: (v, k) => z.children.remove(positions[k]),\n            onAdd: (v, k) => {\n              const i = o.isArr() ? k : Object.keys(o()).indexOf(k);\n              positions[k] = i;\n              z.children.insertAt(i, f(v, k));\n            }\n          }, z.children);\n      }","title":"Action mapChildren ( Html z, Obj o, f )","description":"Map provided Obj with provided function and add result as children.","type":"Action"},"Action mapChildren ( Html z, Object o, f )":{"source":"(z, o, f) => {\n        nice._each(o, (v, k) => z.add(f(v, k)));\n      }","title":"Action mapChildren ( Html z, Object o, f )","description":"Map provided Object with provided function and add result as children.","type":"Action"},"Action mapChildren ( Html z, Arr a, f )":{"source":"(z, a, f) => {\n        a.listen({\n          onRemove: (v, k) => z.children.removeAt(k),\n          onAdd: (v, k) => z.children.insertAt(k, f(v, k))\n        }, z.children);\n      }","title":"Action mapChildren ( Html z, Arr a, f )","description":"Map provided array with provided function and add result as children.","type":"Action"},"Action mapChildren ( Html z, Array a, f )":{"source":"(z, a, f) => a.forEach((v, k) => z.add(f(v, k)))","title":"Action mapChildren ( Html z, Array a, f )","description":"Map provided array with provided function and add result as children.","type":"Action"}},"focus":{"Action focus ( Html z, preventScroll )":{"source":"(z, preventScroll) =>\n      z.on('domNode', node => node.focus(preventScroll))","title":"Action focus ( Html z, preventScroll )","description":"Focuses DOM element.","type":"Action"}},"isStyle":{"Check isStyle ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isStyle ( v )","description":"Checks if value has type Style","type":"Check"}},"isDiv":{"Check isDiv ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isDiv ( v )","description":"Checks if value has type Div","type":"Check"}},"isI":{"Check isI ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isI ( v )","description":"Checks if value has type I","type":"Check"}},"isB":{"Check isB ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isB ( v )","description":"Checks if value has type B","type":"Check"}},"isSpan":{"Check isSpan ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSpan ( v )","description":"Checks if value has type Span","type":"Check"}},"isH1":{"Check isH1 ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH1 ( v )","description":"Checks if value has type H1","type":"Check"}},"isH2":{"Check isH2 ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH2 ( v )","description":"Checks if value has type H2","type":"Check"}},"isH3":{"Check isH3 ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH3 ( v )","description":"Checks if value has type H3","type":"Check"}},"isH4":{"Check isH4 ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH4 ( v )","description":"Checks if value has type H4","type":"Check"}},"isH5":{"Check isH5 ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH5 ( v )","description":"Checks if value has type H5","type":"Check"}},"isH6":{"Check isH6 ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isH6 ( v )","description":"Checks if value has type H6","type":"Check"}},"isP":{"Check isP ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isP ( v )","description":"Checks if value has type P","type":"Check"}},"isLi":{"Check isLi ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isLi ( v )","description":"Checks if value has type Li","type":"Check"}},"isUl":{"Check isUl ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isUl ( v )","description":"Checks if value has type Ul","type":"Check"}},"isOl":{"Check isOl ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isOl ( v )","description":"Checks if value has type Ol","type":"Check"}},"isPre":{"Check isPre ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isPre ( v )","description":"Checks if value has type Pre","type":"Check"}},"isA":{"Check isA ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isA ( v )","description":"Checks if value has type A","type":"Check"}},"isImg":{"Check isImg ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isImg ( v )","description":"Checks if value has type Img","type":"Check"}},"isInput":{"Check isInput ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isInput ( v )","description":"Checks if value has type Input","type":"Check"}},"isButton":{"Check isButton ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isButton ( v )","description":"Checks if value has type Button","type":"Check"}},"isTextarea":{"Check isTextarea ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isTextarea ( v )","description":"Checks if value has type Textarea","type":"Check"}},"isSubmit":{"Check isSubmit ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isSubmit ( v )","description":"Checks if value has type Submit","type":"Check"}},"isCheckbox":{"Check isCheckbox ( v )":{"source":"v => v && v._type ? type.proto.isPrototypeOf(v) : false","title":"Check isCheckbox ( v )","description":"Checks if value has type Checkbox","type":"Check"}}}}